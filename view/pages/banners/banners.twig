{% extends "layout/layoutMaster.twig" %}

{% block title %} Banners {% endblock %}

{% block body %}

<div class="content-body">
    <div class="container-fluid">

        <div class="d-sm-flex align-items-center justify-space-between pb-2">
          <h4 class="mb-4 mb-sm-0 card-title">Listagem de Banners</h4>
          <nav aria-label="breadcrumb" class="ms-auto">
            <ol class="breadcrumb">
              <li class="breadcrumb-item d-flex align-items-center">
                <a class="text-decoration-none d-flex" href="{{ DOMAIN }}">
                  <i class="mx-2 fa-solid fa-house"></i>
                </a>
                <i class="mx-2 fa-light fa-chevron-right"></i>
              </li>
              <li class="breadcrumb-item">
                <span class="fw-medium">AD</span>
                <i class="mx-2 fa-light fa-chevron-right"></i>
              </li>
              <li class="breadcrumb-item text-primary">
                <span class="fw-medium">Lista de Banners</span>
              </li>
            </ol>
          </nav>
        </div>

        <div class="row match-height">
            <div class="col-md-12 col-12">
                <div class="card">
                    <div class="card-body">
                        <link href="{{ DOMAIN }}/view/assets/vendor/fileuploader/fileuploader.css" media="all" rel="stylesheet">
                        <script src="{{ DOMAIN }}/view/assets/vendor/fileuploader/fileuploader.js" type="text/javascript"></script>
                        <script type="text/javascript">
                            function start_banner_gallery() {
                                var saveEditedImage = function(image, item) {
                                    item.editor._blob = image;

                                    if (item.upload && item.upload.status == 'loading')
                                        return item.editor.isUploadPending = true;

                                    if (item.upload && item.upload.send && !item.upload.status) {
                                        item.editor._namee = item.name;
                                        return item.upload.send();
                                    }

                                    if (!item.appended && !item.uploaded)
                                        return;

                                    if (!item.editor || !item.reader.width)
                                        return;

                                    if (item.upload && item.upload.resend) {
                                        item.editor._namee = item.name;
                                        item.editor._editingg = true;
                                        item.upload.resend();
                                    }

                                    if (item.appended) {
                                        item.imageIsUploading = true;
                                        item.editor._editingg = true;

                                        var form = new FormData();
                                        form.append('files[]', item.editor._blob);
                                        form.append('fileuploader', 1);
                                        form.append('_namee', item.name);
                                        form.append('_editingg', true);

                                        $.ajax({
                                            url: '{{ DOMAIN }}/application/Fileuploader/banners/upload.php?id={{ id }}',
                                            data: form,
                                            type: 'POST',
                                            processData: false,
                                            contentType: false
                                        });
                                    }
                                };

                                $('input[name="files"]').fileuploader({
                                    limit: 20,
                                    fileMaxSize: 20,
                                    enableApi: true,
                                    extensions: ['jpg', 'jpeg', 'png', 'gif'],
                                    changeInput: '<div class="fileuploader-items" style="float: left; {{ sizebloco }}">\
                                                    <ul class="fileuploader-items-list">\
                                                        <li class="fileuploader-thumbnails-input" style="max-width:none !important; {{ sizebloco }}"><div class="fileuploader-thumbnails-input-inner"> <div><i class="fal fa-images fa-lg"></i></div> <div>Tamanho MÃ¡x. <br>{{ size }}</div></div></li>\
                                                    </ul>\
                                                </div>',
                                    theme: 'thumbnails thumbnails-with-caption',
                                    files: [
                                        {% for imagem in imagens %}
                                        {
                                            {% set arrayExtensao = imagem.nome|split('.') %}
                                            {% set extensao = arrayExtensao|last %}
                                            name: '{{ imagem.nome }}',
                                            link: '{{ imagem.link }}',
                                            image_id: '{{ imagem.id }}',
                                            type: 'image/{{ extensao }}',
                                            file: '{{ imagem.imagem }}'
                                        },
                                        {% endfor %}
                                    ],
                                    thumbnails: {
                                        canvasImage: false,
                                        popup: {
                                            onShow: function(item) {
                                                item.popup.html.on('click', '[data-action="crop"]', function(e) {
                                                    if (item.editor)
                                                        item.editor.cropper();
                                                }).on('click', '[data-action="rotate-cw"]', function(e) {
                                                    if (item.editor)
                                                        item.editor.rotate();
                                                }).on('click', '[data-action="remove"]', function(e) {
                                                    item.popup.close();
                                                    item.remove();
                                                }).on('click', '[data-action="cancel"]', function(e) {
                                                    item.popup.close();
                                                }).on('click', '[data-action="save"]', function(e) {
                                                    if (item.editor)
                                                        item.editor.save(function(blob, item) {
                                                            saveEditedImage(blob, item);
                                                        }, true, null, false);

                                                    if (item.popup.close)
                                                        item.popup.close();
                                                });
                                            },
                                        },
                                        onImageLoaded: function(item) {
                                            if (!item.html.find('.fileuploader-action-edit').length)
                                                item.html.find('.fileuploader-action-remove').before('');

                                            if (item.appended)
                                                return;

                                            if (item.imageIsUploading) {
                                                item.image.addClass('fileuploader-loading').html('');
                                            }

                                            if (!item.imageLoaded)
                                                item.editor.save(function(blob, item) {
                                                    saveEditedImage(blob, item);
                                                }, true, null, true);

                                            item.imageLoaded = true;
                                        },
                                    },
                                    upload: {
                                        url: '{{ DOMAIN }}/application/Fileuploader/banners/upload.php?id={{ id }}',
                                        data: null,
                                        type: 'POST',
                                        enctype: 'multipart/form-data',
                                        start: false,
                                        synchron: true,
                                        beforeSend: function(item, listEl, parentEl, newInputEl, inputEl) {
                                            // add image to formData
                                            if (item.editor && item.editor._blob) {
                                                item.upload.data.fileuploader = 1;
                                                if (item.upload.formData.delete)
                                                    item.upload.formData.delete(inputEl.attr('name'));
                                                item.upload.formData.append(inputEl.attr('name'), item.editor._blob, item.name);

                                                if (item.editor._namee) {
                                                    item.upload.data._namee = item.name;
                                                }

                                                if (item.editor._editingg) {
                                                    item.upload.data._editingg = true;
                                                }
                                            }

                                            item.html.find('.fileuploader-action-success').removeClass('fileuploader-action-success');
                                        },
                                        onSuccess: function(result, item) {
                                            var data = {};

                                            try {
                                                data = JSON.parse(result);
                                            } catch (e) {
                                                data.hasWarnings = true;
                                            }

                                            if (data.isSuccess && data.files[0]) {
                                                item.name = data.files[0].name;
                                                item.html.find('.column-title > div:first-child').text(data.files[0].name).attr('title', data.files[0].name);

                                                if (item.editor && item.editor.isUploadPending) {
                                                    delete item.editor.isUploadPending;

                                                    saveEditedImage(item.editor._blob, item);
                                                }
                                            }

                                            // if warnings
                                            if (data.hasWarnings) {
                                                for (var warning in data.warnings) {
                                                    alert(data.warnings);
                                                }

                                                item.html.removeClass('upload-successful').addClass('upload-failed');
                                                return this.onError ? this.onError(item) : null;
                                            }

                                            item.html.find('.fileuploader-action-remove').addClass('fileuploader-action-success');
                                            setTimeout(function() {
                                                item.html.find('.progress-bar2').fadeOut(400);
                                            }, 400);
                                        },
                                        onError: function(item) {
                                            var progressBar = item.html.find('.progress-bar2');

                                            if (progressBar.length) {
                                                progressBar.find('span').html(0 + "%");
                                                progressBar.find('.fileuploader-progressbar .bar').width(0 + "%");
                                                item.html.find('.progress-bar2').fadeOut(400);
                                            }

                                            item.upload.status != 'cancelled' && item.html.find('.fileuploader-action-retry').length == 0 ? item.html.find('.column-actions').prepend(
                                                '<a class="fileuploader-action fileuploader-action-retry" title="Retry"><i></i></a>'
                                            ) : null;
                                        },
                                        onProgress: function(data, item) {
                                            var progressBar = item.html.find('.progress-bar2');

                                            if (progressBar.length > 0) {
                                                progressBar.show();
                                                progressBar.find('span').html(data.percentage + "%");
                                                progressBar.find('.fileuploader-progressbar .bar').width(data.percentage + "%");
                                            }
                                        },
                                        onComplete: null,
                                    },
                                    editor: {
                                        cropper: {
                                            ratio: '5:5',
                                            showGrid: true
                                        },
                                        quality: null
                                    },
                                    onRemove: function(item) {
                                        $.post('{{ DOMAIN }}/application/Fileuploader/banners/remove.php?id={{ id }}', {
                                            file: item.name
                                        });
                                    },
                                    sorter: {
                                        selectorExclude: null,
                                        placeholder: null,
                                        scrollContainer: window,
                                        onSort: function(list, listEl, parentEl, newInputEl, inputEl) {
                                            var api = $.fileuploader.getInstance(inputEl.get(0)),
                                                fileList = api.getFileList(),
                                                _list = [];

                                            $.each(fileList, function(i, item) {
                                                _list.push({
                                                    name: item.name,
                                                    index: item.index
                                                });
                                            });

                                            $.post('{{ DOMAIN }}/application/Fileuploader/banners/sort.php?id={{ id }}', {
                                                _list: JSON.stringify(_list)
                                            });
                                        }
                                    },
                                    onSelect: function(item) {
                                        const file = item.file;

                                        if (file && file.type.startsWith('image/')) {
                                            const reader = new FileReader();

                                            reader.onload = function(e) {
                                                const img = new Image();

                                                img.onload = function() {
                                                    const width = img.width;
                                                    const height = img.height;

                                                    {% set parts = size|split('x') %}
                                                    {% set width = parts[0] %}
                                                    {% set height = parts[1] %}

                                                    if (width != {{ width }} || height != {{ height }}) {
                                                        alert('O tamanho permitido Ã© {{ size }} pixels.');
                                                        item.remove();
                                                    }
                                                };

                                                img.src = e.target.result;
                                            };

                                            reader.readAsDataURL(file);
                                        } else {
                                            alert('Por favor, selecione uma imagem vÃ¡lida.');
                                            item.remove();
                                        }
                                    }
                                });
                            }                            
                        </script>

                        <form action="" method="POST" enctype="multipart/form-data">
                            <div class="row">
                                <div class="col-md-12">
                                <div class="form-group">
                                    <div class="form-group">
                                        <input class="d-none" type="file" name="files" id="imagenscap"  accept="image/png, image/jpeg, image/jpg">
                                    </div>
                                </div>
                                </div>
                            </div>
                        </form>

                   	</div>
                </div>
            </div>
        </div>

    </div>
</div>

<script src="{{ PATH }}/view/assets/js/banners.js"></script>
<script>start_banner_gallery();</script>
<style>.fileuploader-theme-thumbnails .fileuploader-thumbnails-input, .fileuploader-theme-thumbnails .fileuploader-items-list .fileuploader-item {max-width: none; {{ sizebloco }} max-height: none;}.fileuploader-item .column-thumbnail {height: 100px;}</style>
{% endblock %}